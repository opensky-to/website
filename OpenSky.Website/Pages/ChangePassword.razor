@page "/changepassword"
@using Newtonsoft.Json
@using OpenSky.Website.OpenAPIs
@inject OpenSkyService openSky
@inject NavigationManager navigationManager
@inject AlertService alertService
@inject UserSessionService userSession

<section id="changepassword">
    <div class="container">
        <div class="card-whitebg">
            <img src="img/resetpassword.png" alt="id card login" style="width: 50%;" />
            <h4 class="card-header">Change your OPEN<span style="color: #08c6a4;">SKY</span> password</h4>
            <div class="card-body">
                <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <InputText @bind-Value="model.Password" type="password" class="form-control" placeHolder="Current Password" />
                        <ValidationMessage For="@(() => model.Password)" />
                    </div>
                    <div class="form-group">
                        <InputText @bind-Value="model.NewPassword" type="password" class="form-control" placeHolder="New Password" />
                        <ValidationMessage For="@(() => model.NewPassword)" />
                    </div>
                    <div class="form-group" style="padding-bottom: 30px;">
                        <div class="custom-checkbox">
                            <InputCheckbox @bind-Value="model.ResetTokens" id="resetTokensCheck"></InputCheckbox>
                            <label class="reset-tokens" for="resetTokensCheck" style="float: left;">Reset all existing access tokens</label>
                        </div>
                    </div>
                    <button disabled="@loading" class="btn btn-primary" style="width: 100%">
                        @if (loading)
                        {
                            <span class="spinner-border spinner-border-sm"></span>
                        }
                        Change Password
                    </button>
                </EditForm>
            </div>
        </div>
    </div>
</section>

<PageFooter />

@code {

    private readonly OpenSkyApi.ChangePassword model = new();
    private bool loading;

    protected override async Task OnInitializedAsync()
    {
        this.model.ResetTokens = true;
        await userSession.CheckExpiration();
        if (!userSession.IsUserLoggedIn)
        {
            navigationManager.NavigateTo("login?returnUrl=/changepassword");
        }
    }

    private async void OnValidSubmit()
    {
        alertService.Clear();
        loading = true;
        try
        {
            var response = await openSky.ChangePasswordAsync(model);
            if (response.IsError)
            {
                alertService.Error(response.Message);
                model.Password = string.Empty;
                model.NewPassword = string.Empty;
                loading = false;
                StateHasChanged();
            }
            else
            {
                alertService.Success(response.Message, true);
                navigationManager.NavigateTo("");
            }
        }
        catch (ApiException ex)
        {
            if (ex.StatusCode == 401)
            {
                navigationManager.NavigateTo("login?returnUrl=/changepassword");
            }

            if (!string.IsNullOrEmpty(ex.Response))
            {
                var problemDetails = JsonConvert.DeserializeObject<ValidationProblemDetails>(ex.Response);
                if (problemDetails != null)
                {
                    foreach (var problemDetailsError in problemDetails.Errors)
                    {
                        foreach (var errorMessage in problemDetailsError.Value)
                        {
                            alertService.Error(errorMessage, false, false);
                        }
                    }

                    model.Password = string.Empty;
                    model.NewPassword = string.Empty;
                    loading = false;
                    StateHasChanged();
                }
                else
                {
                    alertService.Error(ex.Message, false, false);
                    model.Password = string.Empty;
                    model.NewPassword = string.Empty;
                    loading = false;
                    StateHasChanged();
                }
            }
            else
            {
                alertService.Error(ex.Message, false, false);
                model.Password = string.Empty;
                model.NewPassword = string.Empty;
                loading = false;
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            alertService.Error(ex.Message, false, false);
            model.Password = string.Empty;
            model.NewPassword = string.Empty;
            loading = false;
            StateHasChanged();
        }
    }
}
